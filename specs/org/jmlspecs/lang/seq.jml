package org.jmlspecs.lang;

//@ immutable pure
public class seq<T> implements IJmlPrimitiveType {
 /*@   
    public normal_behavior
      ensures \result >= 0;
    model public \bigint size();
    
    public normal_behavior
    model public T get(\bigint i);

    public normal_behavior
      ensures \result == (this.size() == 0);
    model public boolean isEmpty();
    
    public normal_behavior
      ensures \result.size() == 0;
    model static public <T> seq<T> empty();
    
    public normal_behavior
       ensures \result == (s.size() == ss.size() && (\forall \bigint i;; (0 <= i && i < s.size()) ==> (s.get(i) == ss.get(i)) ));
    model public static <T> boolean equals(seq<T> s, seq<T> ss);
    
    public normal_behavior
       ensures \result == (this == s || equals(this,s));
    model public boolean equals(seq<T> s);
    
    public normal_behavior
      requires 0 <= j && j <= this.size();
      ensures \result.size() == this.size() + 1;
      ensures (\forall \bigint i;; (0 <= i && i < j) ==> (\result.get(i) == this.get(i)));
      ensures (\forall \bigint i;; (j+1 <= i && i < \result.size()) ==> (\result.get(i) == this.get(i-1)));
      ensures \result.get(j) == v;
    model public seq<T> add(\bigint j, T v);

    public normal_behavior
      ensures \result == add(size(),v);
    model public seq<T> add(T v);

    public normal_behavior
      ensures \result.size() == this.size() + s.size();
      ensures (\forall \bigint i;; (0 <= i && i < this.size()) ==> (\result.get(i) == this.get(i)));
      ensures (\forall \bigint i;; (this.size() <= i && i < \result.size()) ==> (\result.get(i) == this.get(i-this.size())));
    model public seq<T> append(seq<T> s);

    public normal_behavior
      requires 0 <= j && j < this.size();
      ensures \result.size() == this.size() - 1;
      ensures (\forall \bigint i;; (0 <= i && i < j) ==> (\result.get(i) == this.get(i)));
      ensures (\forall \bigint i;; (j <= i && i < \result.size()) ==> (\result.get(i) == this.get(i+1)));
    model public seq<T> remove(\bigint j);
  
    @*/
}

