/*@

public class set<T> extends IJMLPrimitiveType {
    
    public normal_behavior
      ensures \result >= 0;
    pure
    public \bigint size();
    
    public normal_behavior
    pure
    public boolean contains(T x);

    public normal_behavior
      ensures \result == (this.size() == 0);
    pure
    public boolean empty();
    
    public normal_behavior
      ensures \result.size() == 0;
      ensures (\forall T x; ; !\result/contains(x));
    static public set<T> set();
    
    public normal_behavior
       ensures \result == (\forall T t;; this.contains(t) == s.contains(t));
    public boolean equals(set<T> s);
    
    public normal_behavior
      requires this.contains(x);
      ensures \result == this;
    also
      requires !this.contains(x);
      ensures \result.size() == this.size() + 1;
      ensures \result.contains(x);
    public set<T> add(T x);
    
    public normal_behavior
      requires !this.contains(x);
      ensures \result == this;
    also
      requires this.contains(x);
      ensures \result.size() == this.size() - 1;
      ensures \result.contains(x);
    public set<T> remove(T x);
    
}

 @*/