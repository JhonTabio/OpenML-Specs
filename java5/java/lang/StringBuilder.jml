package java.lang;

public final class StringBuilder extends AbstractStringBuilder implements java.io.Serializable,CharSequence {
  static final long serialVersionUID;
  
  //@ public normal_behavior
  //@   ensures true;
  //@ pure
  public StringBuilder();
//  public StringBuilder(int);
//  public StringBuilder(String);
//  public StringBuilder(CharSequence);
//  public StringBuilder append(Object);
//  public StringBuilder append(String);
//  public StringBuilder append(StringBuffer);
//  public StringBuilder append(CharSequence);
//  public StringBuilder append(CharSequence, int, int);
//  public StringBuilder append(char[]);
//  public StringBuilder append(char[], int, int);
//  public StringBuilder append(boolean);
//  public StringBuilder append(char);
//  public StringBuilder append(int);
//  public StringBuilder append(long);
//  public StringBuilder append(float);
//  public StringBuilder append(double);
//  public StringBuilder appendCodePoint(int);
//  public StringBuilder delete(int, int);
//  public StringBuilder deleteCharAt(int);
//  public StringBuilder replace(int, int, String);
//  public StringBuilder insert(int, char[], int, int);
//  public StringBuilder insert(int, Object);
//  public StringBuilder insert(int, String);
//  public StringBuilder insert(int, char[]);
//  public StringBuilder insert(int, CharSequence);
//  public StringBuilder insert(int, CharSequence, int, int);
//  public StringBuilder insert(int, boolean);
//  public StringBuilder insert(int, char);
//  public StringBuilder insert(int, int);
//  public StringBuilder insert(int, long);
//  public StringBuilder insert(int, float);
//  public StringBuilder insert(int, double);
//  public int indexOf(String);
//  public int indexOf(String, int);
//  public int lastIndexOf(String);
//  public int lastIndexOf(String, int);
//  public StringBuilder reverse();
//  public String toString();
//  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
//  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, ClassNotFoundException;
//  public AbstractStringBuilder reverse();
//  public AbstractStringBuilder insert(int, double);
//  public AbstractStringBuilder insert(int, float);
//  public AbstractStringBuilder insert(int, long);
//  public AbstractStringBuilder insert(int, int);
//  public AbstractStringBuilder insert(int, char);
//  public AbstractStringBuilder insert(int, boolean);
//  public AbstractStringBuilder insert(int, CharSequence, int, int);
//  public AbstractStringBuilder insert(int, CharSequence);
//  public AbstractStringBuilder insert(int, char[]);
//  public AbstractStringBuilder insert(int, String);
//  public AbstractStringBuilder insert(int, Object);
//  public AbstractStringBuilder insert(int, char[], int, int);
//  public String substring(int, int);
//  public CharSequence subSequence(int, int);
//  public String substring(int);
//  public AbstractStringBuilder replace(int, int, String);
//  public AbstractStringBuilder deleteCharAt(int);
//  public AbstractStringBuilder appendCodePoint(int);
//  public AbstractStringBuilder delete(int, int);
//  public AbstractStringBuilder append(double);
//  public AbstractStringBuilder append(float);
//  public AbstractStringBuilder append(long);
//  public AbstractStringBuilder append(int);
//  public AbstractStringBuilder append(char);
//  public AbstractStringBuilder append(boolean);
//  public AbstractStringBuilder append(char[], int, int);
//  public AbstractStringBuilder append(char[]);
//  public AbstractStringBuilder append(CharSequence, int, int);
//  public AbstractStringBuilder append(CharSequence);
//  public AbstractStringBuilder append(StringBuffer);
//  public AbstractStringBuilder append(String);
//  public AbstractStringBuilder append(Object);
//  public void setCharAt(int, char);
//  public void getChars(int, int, char[], int);
//  public int offsetByCodePoints(int, int);
//  public int codePointCount(int, int);
//  public int codePointBefore(int);
//  public int codePointAt(int);
//  public char charAt(int);
//  public void setLength(int);
//  public void trimToSize();
//  public void ensureCapacity(int);
//  public int capacity();
//  public int length();
//  public Appendable append(char) throws java.io.IOException;
//  public Appendable append(CharSequence, int, int) throws java.io.IOException;
//  public Appendable append(CharSequence) throws java.io.IOException;
}