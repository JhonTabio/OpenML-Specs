package java.security;

public abstract class KeyPairGenerator {

//	  private static final sun.security.util.Debug pdebug;
//	  private static final boolean skipDebug;
//	  private final java.lang.String algorithm;
	  Provider provider;
	  protected KeyPairGenerator(java.lang.String s);
	  public java.lang.String getAlgorithm();
	  private static KeyPairGenerator getInstance(sun.security.jca.GetInstance.Instance inst, java.lang.String s);
	  
	  //@ public normal_behavior
	  //@   ensures \fresh(\result);
	  //@ pure
	  public static KeyPairGenerator getInstance(java.lang.String s) throws NoSuchAlgorithmException;
	  public static KeyPairGenerator getInstance(java.lang.String s, java.lang.String ss) throws NoSuchAlgorithmException, NoSuchProviderException;
	  public static KeyPairGenerator getInstance(java.lang.String s, Provider provider) throws NoSuchAlgorithmException;
	  public final Provider getProvider();
	  void disableFailover();
	  public void initialize(int n);
	  public void initialize(int n, SecureRandom random);
	  public void initialize(java.security.spec.AlgorithmParameterSpec alg) throws InvalidAlgorithmParameterException;
	  public void initialize(java.security.spec.AlgorithmParameterSpec alg, SecureRandom random) throws InvalidAlgorithmParameterException;
	  public final KeyPair genKeyPair();
	  public KeyPair generateKeyPair();
}